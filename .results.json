{
  "stats": {
    "suites": 8,
    "tests": 23,
    "passes": 14,
    "pending": 0,
    "failures": 9,
    "start": "2018-02-08T20:14:44.753Z",
    "end": "2018-02-08T20:14:44.895Z",
    "duration": 142
  },
  "tests": [
    {
      "title": "should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "fullTitle": "Quotes Actions addQuote(quote: {}) should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions removeQuote(quoteId: Integer) should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions upvoteQuote(quoteId: Integer) should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions downvoteQuote(quoteId: INteger) should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "App Component renders without crashing",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders an h1 tag with \"Quote Maker\"",
      "fullTitle": "App Component always renders an h1 tag with \"Quote Maker\"",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `QuoteForm` component",
      "fullTitle": "App Component always renders a `QuoteForm` component",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `Quotes` components",
      "fullTitle": "App Component always renders a `Quotes` components",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "QuoteForm Component renders without crashing",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a default state",
      "fullTitle": "QuoteForm Component has a default state",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a form tag",
      "fullTitle": "QuoteForm Component always renders a form tag",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a textarea[name=\"content\"] tag for quote content",
      "fullTitle": "QuoteForm Component always renders a textarea[name=\"content\"] tag for quote content",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "QuoteForm must contain one <textarea name=\"content\" /> tag: expected 0 to equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "stack": "AssertionError: QuoteForm must contain one <textarea name=\"content\" /> tag: expected 0 to equal 1\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:49:29)"
      }
    },
    {
      "title": "always renders a input[name=\"author\"] tag for quote author",
      "fullTitle": "QuoteForm Component always renders a input[name=\"author\"] tag for quote author",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "QuoteForm must contain one <input name=\"author\" /> tag: expected 0 to equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "stack": "AssertionError: QuoteForm must contain one <input name=\"author\" /> tag: expected 0 to equal 1\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:55:29)"
      }
    },
    {
      "title": "should pass a new value to state using the handleOnChange function",
      "fullTitle": "QuoteForm Component should pass a new value to state using the handleOnChange function",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Method “props” is only meant to be run on a single node. 0 found instead.\n    at ShallowWrapper.single (node_modules/enzyme/build/ShallowWrapper.js:1516:17)\n    at ShallowWrapper.props (node_modules/enzyme/build/ShallowWrapper.js:867:21)\n    at ShallowWrapper.prop (node_modules/enzyme/build/ShallowWrapper.js:1075:21)\n    at ShallowWrapper.simulate (node_modules/enzyme/build/ShallowWrapper.js:838:28)\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:60:42)",
        "message": "Method “props” is only meant to be run on a single node. 0 found instead."
      }
    },
    {
      "title": "should handleOnSubmit and preventDefault()",
      "fullTitle": "QuoteForm Component should handleOnSubmit and preventDefault()",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Method “props” is only meant to be run on a single node. 0 found instead.\n    at ShallowWrapper.single (node_modules/enzyme/build/ShallowWrapper.js:1516:17)\n    at ShallowWrapper.props (node_modules/enzyme/build/ShallowWrapper.js:867:21)\n    at ShallowWrapper.prop (node_modules/enzyme/build/ShallowWrapper.js:1075:21)\n    at ShallowWrapper.simulate (node_modules/enzyme/build/ShallowWrapper.js:838:28)\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:72:42)",
        "message": "Method “props” is only meant to be run on a single node. 0 found instead."
      }
    },
    {
      "title": "should reset state after form handleOnSubmit",
      "fullTitle": "QuoteForm Component should reset state after form handleOnSubmit",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Method “props” is only meant to be run on a single node. 0 found instead.\n    at ShallowWrapper.single (node_modules/enzyme/build/ShallowWrapper.js:1516:17)\n    at ShallowWrapper.props (node_modules/enzyme/build/ShallowWrapper.js:867:21)\n    at ShallowWrapper.prop (node_modules/enzyme/build/ShallowWrapper.js:1075:21)\n    at ShallowWrapper.simulate (node_modules/enzyme/build/ShallowWrapper.js:838:28)\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:82:42)",
        "message": "Method “props” is only meant to be run on a single node. 0 found instead."
      }
    },
    {
      "title": "should call addQuote prop on handleOnSubmit",
      "fullTitle": "QuoteForm Component should call addQuote prop on handleOnSubmit",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Quotes Reducer should return the initial state",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle ADD_QUOTE",
      "fullTitle": "Quotes Reducer should handle ADD_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle REMOVE_QUOTE",
      "fullTitle": "Quotes Reducer should handle REMOVE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'find' of undefined\n    at quotes (src/reducers/quotes.js:26:33)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:44:12)",
        "message": "Cannot read property 'find' of undefined"
      }
    },
    {
      "title": "should handle UPVOTE_QUOTE",
      "fullTitle": "Quotes Reducer should handle UPVOTE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'find' of undefined\n    at quotes (src/reducers/quotes.js:37:33)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:68:12)",
        "message": "Cannot read property 'find' of undefined"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'find' of undefined\n    at quotes (src/reducers/quotes.js:47:33)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:94:12)",
        "message": "Cannot read property 'find' of undefined"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'find' of undefined\n    at quotes (src/reducers/quotes.js:47:33)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:120:12)",
        "message": "Cannot read property 'find' of undefined"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "always renders a textarea[name=\"content\"] tag for quote content",
      "fullTitle": "QuoteForm Component always renders a textarea[name=\"content\"] tag for quote content",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "QuoteForm must contain one <textarea name=\"content\" /> tag: expected 0 to equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "stack": "AssertionError: QuoteForm must contain one <textarea name=\"content\" /> tag: expected 0 to equal 1\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:49:29)"
      }
    },
    {
      "title": "always renders a input[name=\"author\"] tag for quote author",
      "fullTitle": "QuoteForm Component always renders a input[name=\"author\"] tag for quote author",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "QuoteForm must contain one <input name=\"author\" /> tag: expected 0 to equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "stack": "AssertionError: QuoteForm must contain one <input name=\"author\" /> tag: expected 0 to equal 1\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:55:29)"
      }
    },
    {
      "title": "should pass a new value to state using the handleOnChange function",
      "fullTitle": "QuoteForm Component should pass a new value to state using the handleOnChange function",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Method “props” is only meant to be run on a single node. 0 found instead.\n    at ShallowWrapper.single (node_modules/enzyme/build/ShallowWrapper.js:1516:17)\n    at ShallowWrapper.props (node_modules/enzyme/build/ShallowWrapper.js:867:21)\n    at ShallowWrapper.prop (node_modules/enzyme/build/ShallowWrapper.js:1075:21)\n    at ShallowWrapper.simulate (node_modules/enzyme/build/ShallowWrapper.js:838:28)\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:60:42)",
        "message": "Method “props” is only meant to be run on a single node. 0 found instead."
      }
    },
    {
      "title": "should handleOnSubmit and preventDefault()",
      "fullTitle": "QuoteForm Component should handleOnSubmit and preventDefault()",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Method “props” is only meant to be run on a single node. 0 found instead.\n    at ShallowWrapper.single (node_modules/enzyme/build/ShallowWrapper.js:1516:17)\n    at ShallowWrapper.props (node_modules/enzyme/build/ShallowWrapper.js:867:21)\n    at ShallowWrapper.prop (node_modules/enzyme/build/ShallowWrapper.js:1075:21)\n    at ShallowWrapper.simulate (node_modules/enzyme/build/ShallowWrapper.js:838:28)\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:72:42)",
        "message": "Method “props” is only meant to be run on a single node. 0 found instead."
      }
    },
    {
      "title": "should reset state after form handleOnSubmit",
      "fullTitle": "QuoteForm Component should reset state after form handleOnSubmit",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Method “props” is only meant to be run on a single node. 0 found instead.\n    at ShallowWrapper.single (node_modules/enzyme/build/ShallowWrapper.js:1516:17)\n    at ShallowWrapper.props (node_modules/enzyme/build/ShallowWrapper.js:867:21)\n    at ShallowWrapper.prop (node_modules/enzyme/build/ShallowWrapper.js:1075:21)\n    at ShallowWrapper.simulate (node_modules/enzyme/build/ShallowWrapper.js:838:28)\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:82:42)",
        "message": "Method “props” is only meant to be run on a single node. 0 found instead."
      }
    },
    {
      "title": "should handle REMOVE_QUOTE",
      "fullTitle": "Quotes Reducer should handle REMOVE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'find' of undefined\n    at quotes (src/reducers/quotes.js:26:33)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:44:12)",
        "message": "Cannot read property 'find' of undefined"
      }
    },
    {
      "title": "should handle UPVOTE_QUOTE",
      "fullTitle": "Quotes Reducer should handle UPVOTE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'find' of undefined\n    at quotes (src/reducers/quotes.js:37:33)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:68:12)",
        "message": "Cannot read property 'find' of undefined"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'find' of undefined\n    at quotes (src/reducers/quotes.js:47:33)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:94:12)",
        "message": "Cannot read property 'find' of undefined"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'find' of undefined\n    at quotes (src/reducers/quotes.js:47:33)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:120:12)",
        "message": "Cannot read property 'find' of undefined"
      }
    }
  ],
  "passes": [
    {
      "title": "should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "fullTitle": "Quotes Actions addQuote(quote: {}) should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions removeQuote(quoteId: Integer) should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions upvoteQuote(quoteId: Integer) should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions downvoteQuote(quoteId: INteger) should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "App Component renders without crashing",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders an h1 tag with \"Quote Maker\"",
      "fullTitle": "App Component always renders an h1 tag with \"Quote Maker\"",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `QuoteForm` component",
      "fullTitle": "App Component always renders a `QuoteForm` component",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `Quotes` components",
      "fullTitle": "App Component always renders a `Quotes` components",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "QuoteForm Component renders without crashing",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a default state",
      "fullTitle": "QuoteForm Component has a default state",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a form tag",
      "fullTitle": "QuoteForm Component always renders a form tag",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should call addQuote prop on handleOnSubmit",
      "fullTitle": "QuoteForm Component should call addQuote prop on handleOnSubmit",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Quotes Reducer should return the initial state",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle ADD_QUOTE",
      "fullTitle": "Quotes Reducer should handle ADD_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}